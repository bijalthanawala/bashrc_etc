#! /bin/bash

this_script_fullname="${BASH_SOURCE[0]}"
this_script_basename=$(basename ${this_script_fullname})
script_alias=$(echo ${this_script_basename} | tr -d .)
echo "Running ${this_script_fullname}"

echo "Setting up alias ${script_alias}"
alias ${script_alias}="vim ${this_script_fullname}; source ${this_script_fullname}"

# improve less
alias less='less --quit-if-one-screen --ignore-case --LONG-PROMPT --LINE-NUMBERS --no-init'

# improve man
export MANPAGER='less --ignore-case --no-init'

# improve ls
alias ll='ls -l'
export TIME_STYLE=long-iso

# improve bash history
HISTCONTROL=ignorespace
HISTFILESIZE=-1
HISTTIMEFORMAT="%Y-%m-%d %H:%M:%S "

# set noclobber
set -o noclobber

#improve git
alias gitgr="git log --color --graph --branches --all --decorate=short --oneline"

#Make bash prompt git-friendly
function git_branch_prompt() {
    gb=$(git rev-parse --abbrev-ref HEAD 2>/dev/null)
    if [ -n "${gb}" ] ; then
        echo "[git:${gb}]$"
    else
        echo ""
    fi
}

ps1_has_git_prompt=$(echo ${PS1} | grep -o git_branch_prompt)
if [ -z "${ps1_has_git_prompt}" ] ; then
    echo Making bash prompt git-branch-friendly
    COLOR_LIGHTRED="\[\e[0;31m\]"
    COLOR_STOP="\[\e[m\]"
    export PS1="${PS1}${COLOR_LIGHTRED}\$(git_branch_prompt)${COLOR_STOP} "
else
    echo bash prompt is already git-branch-friendly
fi

# Warn if sudo insults are enabled
insults=$(grep "Defaults insults" /etc/sudoers 2>/dev/null)
if [ -n "${insults}" ] ; then
    echo "WARNING: sudo insults are ON"
fi

# Warn if .vimrc is missing 
if [ ! -e "${HOME}/.vimrc" ] ; then
   echo "WARNING: No .vimrc settings"
fi

#This script is sourced so, unset temporary variables
#TODO: OR perhaps if we put all the work above in a function
# then that would save us from explicit unset-s
unset this_script_fullname
unset this_script_basename
unset script_alias
unset ps1_has_git_prompt
unset insults
